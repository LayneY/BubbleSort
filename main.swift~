

// ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
let unsortedIntegers = [5, 1, 4, 2, 8]
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
// ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧


// Add your code below:
func swap(integers:inout [Int], firstIndex: Int, secondIndex: Int) {
    let num1 = integers[firstIndex]
    let num2 = integers[secondIndex]

    integers[firstIndex] = num2
    integers[secondIndex] = num1
}

var pass = 1
var swaps = 0
var totalSwaps = 0

var ints = unsortedIntegers
print("Pass: 0, Swaps: 0/0, Array: \(ints)")
repeat {
    swaps = 0
    for index in 1 ..< ints.count {
        while ints[index-1] > ints[index] {
            swap(integers:&ints, firstIndex:index-1, secondIndex:index)
            swaps += 1
        }
    }
    totalSwaps += swaps
    print("Pass: \(pass), Swaps: \(swaps)/\(totalSwaps), Array: \(ints)")
    pass += 1
} while swaps != 0

